name: Release (Requires manual steps to take)
on: workflow_dispatch
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0
      - name: Set git config safe.directory
        run: git config --global --add safe.directory "$(pwd)"
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 18.x
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        name: Setup Java
        with:
          distribution: temurin
          java-version: 11.x
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c
        name: Setup Python
        with:
          python-version: 3.x
      - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9
        name: Setup .NET
        with:
          dotnet-version: 9.0.x
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        name: Setup Go
        with:
          go-version: ^1.16.0
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: release
        run: |
          unset CI # enable full package-all https://github.com/mongodb/awscdk-resources-mongodbatlas/blob/main/.projen/tasks.json#L157-L170
          npx projen release
      - name: Backup artifact permissions
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: build-artifact
          path: dist
          overwrite: true
  
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      id-token: write
    steps:
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 18.x
      - name: Download build artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Publish to npm with provenance
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: npx -p publib@latest publib-npm
      - name: Extract Version
        id: extract-version
        if: ${{ failure() }}
        run: echo "VERSION=$(cat dist/version.txt)" >> "${GITHUB_OUTPUT}"


  release_github:
    name: Publish to GitHub Releases
    needs: [release, release_npm]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 18.x
      - name: Download build artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
        run: errout=$(mktemp); gh release create "$(cat dist/releasetag.txt)" -R "${GITHUB_REPOSITORY}" -F dist/changelog.md -t "$(cat dist/releasetag.txt)" --target "${GITHUB_REF}" 2> "$errout" && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" "$errout"; then cat "$errout"; exit $exitcode; fi
      - name: Extract Version
        id: extract-version
        if: ${{ failure() }}
        run: echo "VERSION=$(cat dist/version.txt)" >> "${GITHUB_OUTPUT}"
      - name: Generate PURL and SBOM
        run: |
          ./scripts/compliance/gen-purls.sh
          ./scripts/compliance/gen-sbom.sh
        env:
          SILKBOMB_IMG: ${{ vars.SILKBOMB_IMG }}
      - name: Upload SBOM to Kondukto
        run: ./scripts/compliance/upload-sbom.sh
        env:
          KONDUKTO_TOKEN: ${{ secrets.KONDUKTO_TOKEN }}
          SILKBOMB_IMG: ${{ vars.SILKBOMB_IMG }}
          KONDUKTO_REPO: ${{ vars.KONDUKTO_REPO }}
          KONDUKTO_BRANCH_PREFIX: ${{ vars.KONDUKTO_BRANCH_PREFIX }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Generate SSDLC report
        run: |
          AUTHOR="${{ github.actor }}"
          export AUTHOR
          VERSION="${{ steps.extract-version.outputs.VERSION }}"
          export VERSION
          ./scripts/compliance/gen-ssdlc-report.sh
        env:
          KONDUKTO_TOKEN: ${{ secrets.KONDUKTO_TOKEN }}
          SILKBOMB_IMG: ${{ vars.SILKBOMB_IMG }}
          KONDUKTO_REPO: ${{ vars.KONDUKTO_REPO }}
          KONDUKTO_BRANCH_PREFIX: ${{ vars.KONDUKTO_BRANCH_PREFIX }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec
        with:
          gpg_private_key: ${{ secrets.APIX_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.APIX_BOT_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Commit changes
        shell: bash
        run: |
          if [[ $(git status --porcelain) ]]; then
            git pull
            git config --local user.email svc-api-experience-integrations-escalation@mongodb.com
            git config --local user.name svc-apix-bot
            git remote set-url origin https://svc-apix-bot:${{ secrets.APIX_BOT_PAT }}@github.com/${{ github.repository }}
            git add compliance/v*/*
            git commit -m "chore: Update SSDLC report for ${{ steps.extract-version.outputs.VERSION }}"
            git push origin
          else
            echo "No changes to commit."
          fi
      - name: Upload SBOM as release artifact
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836
        with:
          files: compliance/sbom.json
          tag_name: ${{ steps.extract-version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
