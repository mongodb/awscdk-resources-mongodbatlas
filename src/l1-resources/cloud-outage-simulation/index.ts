// Generated by cdk-import
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";

/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 *
 * @schema CfnCloudOutageSimulationProps
 */
export interface CfnCloudOutageSimulationProps {
  /**
   * The profile is defined in AWS Secret manager. See [Secret Manager Profile setup](../../../examples/profile-secret.yaml).
   *
   * @schema CfnCloudOutageSimulationProps#Profile
   */
  readonly profile: string;

  /**
   * List of settings that configure your cluster regions. For Global Clusters, each object in the array represents a zone where your clusters nodes deploy. For non-Global replica sets and sharded clusters, this array has one object representing where your clusters nodes deploy.
   *
   * @schema CfnCloudOutageSimulationProps#OutageFilters
   */
  readonly outageFilters: Filter[];

  /**
   * Human-readable label that identifies the project.
   *
   * @schema CfnCloudOutageSimulationProps#ProjectId
   */
  readonly projectId: string;

  /**
   * Human-readable label that identifies the cluster .
   *
   * @schema CfnCloudOutageSimulationProps#ClusterName
   */
  readonly clusterName: string;
}

/**
 * Converts an object of type 'CfnCloudOutageSimulationProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnCloudOutageSimulationProps(
  obj: CfnCloudOutageSimulationProps | undefined
): Record<string, any> | undefined {
  if (obj === undefined) {
    return undefined;
  }
  const result = {
    Profile: obj.profile,
    OutageFilters: obj.outageFilters?.map((y) => toJson_Filter(y)),
    ProjectId: obj.projectId,
    ClusterName: obj.clusterName,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined ? r : { ...r, [i[0]]: i[1] }),
    {}
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema Filter
 */
export interface Filter {
  /**
   * @schema Filter#CloudProvider
   */
  readonly cloudProvider?: FilterCloudProvider;

  /**
   * @schema Filter#Region
   */
  readonly region?: string;

  /**
   * @schema Filter#Type
   */
  readonly type?: string;
}

/**
 * Converts an object of type 'Filter' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_Filter(
  obj: Filter | undefined
): Record<string, any> | undefined {
  if (obj === undefined) {
    return undefined;
  }
  const result = {
    CloudProvider: obj.cloudProvider,
    Region: obj.region,
    Type: obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined ? r : { ...r, [i[0]]: i[1] }),
    {}
  );
}
/* eslint-enable max-len, quote-props */

/**
 * @schema FilterCloudProvider
 */
export enum FilterCloudProvider {
  /** AWS */
  AWS = "AWS",
  /** AZURE */
  AZURE = "AZURE",
  /** GCP */
  GCP = "GCP",
}

/**
 * A CloudFormation `MongoDB::Atlas::CloudOutageSimulation`
 *
 * @cloudformationResource MongoDB::Atlas::CloudOutageSimulation
 * @stability external
 */
export class CfnCloudOutageSimulation extends cdk.CfnResource {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME =
    "MongoDB::Atlas::CloudOutageSimulation";

  /**
   * Resource props.
   */
  public readonly props: CfnCloudOutageSimulationProps;

  /**
   * Attribute `MongoDB::Atlas::CloudOutageSimulation.SimulationId`
   */
  public readonly attrSimulationId: string;
  /**
   * Attribute `MongoDB::Atlas::CloudOutageSimulation.StartRequestDate`
   */
  public readonly attrStartRequestDate: string;
  /**
   * Attribute `MongoDB::Atlas::CloudOutageSimulation.State`
   */
  public readonly attrState: string;
  /**
   * Attribute `MongoDB::Atlas::CloudOutageSimulation.ClusterType`
   */
  public readonly attrClusterType: string;

  /**
   * Create a new `MongoDB::Atlas::CloudOutageSimulation`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(
    scope: constructs.Construct,
    id: string,
    props: CfnCloudOutageSimulationProps
  ) {
    super(scope, id, {
      type: CfnCloudOutageSimulation.CFN_RESOURCE_TYPE_NAME,
      properties: toJson_CfnCloudOutageSimulationProps(props)!,
    });

    this.props = props;

    this.attrSimulationId = cdk.Token.asString(this.getAtt("SimulationId"));
    this.attrStartRequestDate = cdk.Token.asString(
      this.getAtt("StartRequestDate")
    );
    this.attrState = cdk.Token.asString(this.getAtt("State"));
    this.attrClusterType = cdk.Token.asString(this.getAtt("ClusterType"));
  }
}
