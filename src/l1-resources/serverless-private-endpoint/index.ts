// Generated by cdk-import
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";

/**
 * Returns, adds, edits, and removes private endpoints for serverless instances. To learn more, see the Atlas Administration API tab on the following tutorial.
 *
 * @schema CfnServerlessPrivateEndpointProps
 */
export interface CfnServerlessPrivateEndpointProps {
  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnServerlessPrivateEndpointProps#ProjectId
   */
  readonly projectId: string;

  /**
   * Human-readable label that identifies the serverless instance for which the tenant endpoint will be created.
   *
   * @schema CfnServerlessPrivateEndpointProps#InstanceName
   */
  readonly instanceName: string;

  /**
   * Human-readable comment associated with the private endpoint.
   *
   * @schema CfnServerlessPrivateEndpointProps#Comment
   */
  readonly comment?: string;

  /**
   * Profile used to provide credentials information, (a secret with the cfn/atlas/profile/{Profile}, is required), if not provided default is used
   *
   * @schema CfnServerlessPrivateEndpointProps#Profile
   */
  readonly profile?: string;

  /**
   * Unique string that identifies the private endpoint's network interface.
   *
   * @schema CfnServerlessPrivateEndpointProps#CloudProviderEndpointId
   */
  readonly cloudProviderEndpointId?: string;

  /**
   * IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.
   *
   * @schema CfnServerlessPrivateEndpointProps#PrivateEndpointIpAddress
   */
  readonly privateEndpointIpAddress?: string;

  /**
   * If true the resource will create the aws private endpoint and assign the Endpoint ID
   *
   * @schema CfnServerlessPrivateEndpointProps#CreateAndAssignAWSPrivateEndpoint
   */
  readonly createAndAssignAwsPrivateEndpoint?: boolean;

  /**
   * Properties used to configure Aws private endpoint
   *
   * @schema CfnServerlessPrivateEndpointProps#AwsPrivateEndpointConfigurationProperties
   */
  readonly awsPrivateEndpointConfigurationProperties?: AwsPrivateEndpointConfig;
}

/**
 * Converts an object of type 'CfnServerlessPrivateEndpointProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnServerlessPrivateEndpointProps(
  obj: CfnServerlessPrivateEndpointProps | undefined
): Record<string, any> | undefined {
  if (obj === undefined) {
    return undefined;
  }
  const result = {
    ProjectId: obj.projectId,
    InstanceName: obj.instanceName,
    Comment: obj.comment,
    Profile: obj.profile,
    CloudProviderEndpointId: obj.cloudProviderEndpointId,
    PrivateEndpointIpAddress: obj.privateEndpointIpAddress,
    CreateAndAssignAWSPrivateEndpoint: obj.createAndAssignAwsPrivateEndpoint,
    AwsPrivateEndpointConfigurationProperties: toJson_AwsPrivateEndpointConfig(
      obj.awsPrivateEndpointConfigurationProperties
    ),
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined ? r : { ...r, [i[0]]: i[1] }),
    {}
  );
}
/* eslint-enable max-len, quote-props */

/**
 * AWS Private endpoint configuration properties
 *
 * @schema awsPrivateEndpointConfig
 */
export interface AwsPrivateEndpointConfig {
  /**
   * String Representing the AWS VPC ID (like: vpc-xxxxxxxxxxxxxxxx) (Used For Creating the AWS VPC Endpoint)
   *
   * @schema awsPrivateEndpointConfig#VpcId
   */
  readonly vpcId?: string;

  /**
   * List of string representing the AWS VPC Subnet ID (like: subnet-xxxxxxxxxxxxxxxxx) (Used For Creating the AWS VPC Endpoint)
   *
   * @schema awsPrivateEndpointConfig#SubnetIds
   */
  readonly subnetIds?: string[];

  /**
   * Unique identifiers of the interface endpoints in your VPC that you added to the AWS PrivateLink connection.
   *
   * @schema awsPrivateEndpointConfig#InterfaceEndpointId
   */
  readonly interfaceEndpointId?: string;

  /**
   * Status of the AWS PrivateEndpoint connection.
   *
   * @schema awsPrivateEndpointConfig#AWSPrivateEndpointStatus
   */
  readonly awsPrivateEndpointStatus?: string;

  /**
   * Aws Region
   *
   * @schema awsPrivateEndpointConfig#Region
   */
  readonly region?: string;
}

/**
 * Converts an object of type 'AwsPrivateEndpointConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_AwsPrivateEndpointConfig(
  obj: AwsPrivateEndpointConfig | undefined
): Record<string, any> | undefined {
  if (obj === undefined) {
    return undefined;
  }
  const result = {
    VpcId: obj.vpcId,
    SubnetIds: obj.subnetIds?.map((y) => y),
    InterfaceEndpointId: obj.interfaceEndpointId,
    AWSPrivateEndpointStatus: obj.awsPrivateEndpointStatus,
    Region: obj.region,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined ? r : { ...r, [i[0]]: i[1] }),
    {}
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A CloudFormation `MongoDB::Atlas::ServerlessPrivateEndpoint`
 *
 * @cloudformationResource MongoDB::Atlas::ServerlessPrivateEndpoint
 * @stability external
 */
export class CfnServerlessPrivateEndpoint extends cdk.CfnResource {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME =
    "MongoDB::Atlas::ServerlessPrivateEndpoint";

  /**
   * Resource props.
   */
  public readonly props: CfnServerlessPrivateEndpointProps;

  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.Id`
   */
  public readonly attrId: string;
  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.EndpointServiceName`
   */
  public readonly attrEndpointServiceName: string;
  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.ErrorMessage`
   */
  public readonly attrErrorMessage: string;
  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.ProviderName`
   */
  public readonly attrProviderName: string;
  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.Status`
   */
  public readonly attrStatus: string;
  /**
   * Attribute `MongoDB::Atlas::ServerlessPrivateEndpoint.AwsPrivateEndpointMetaData`
   */
  public readonly attrAwsPrivateEndpointMetaData: string;

  /**
   * Create a new `MongoDB::Atlas::ServerlessPrivateEndpoint`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(
    scope: constructs.Construct,
    id: string,
    props: CfnServerlessPrivateEndpointProps
  ) {
    super(scope, id, {
      type: CfnServerlessPrivateEndpoint.CFN_RESOURCE_TYPE_NAME,
      properties: toJson_CfnServerlessPrivateEndpointProps(props)!,
    });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt("Id"));
    this.attrEndpointServiceName = cdk.Token.asString(
      this.getAtt("EndpointServiceName")
    );
    this.attrErrorMessage = cdk.Token.asString(this.getAtt("ErrorMessage"));
    this.attrProviderName = cdk.Token.asString(this.getAtt("ProviderName"));
    this.attrStatus = cdk.Token.asString(this.getAtt("Status"));
    this.attrAwsPrivateEndpointMetaData = cdk.Token.asString(
      this.getAtt("AwsPrivateEndpointMetaData")
    );
  }
}
