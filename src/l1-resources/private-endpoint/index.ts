// Generated by cdk-import
import * as cdk from "aws-cdk-lib";
import * as constructs from "constructs";

/**
 * The Private Endpoint creation flow consists of the creation of three related resources in the next order: 1. Atlas Private Endpoint Service 2. Aws VPC private Endpoint 3. Atlas Private Endpoint
 *
 * @schema CfnPrivateEndpointProps
 */
export interface CfnPrivateEndpointProps {
  /**
   * The profile is defined in AWS Secret manager. See [Secret Manager Profile setup (../../../examples/profile-secret.yaml)
   *
   * @schema CfnPrivateEndpointProps#Profile
   */
  readonly profile?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies your project.
   *
   * @schema CfnPrivateEndpointProps#ProjectId
   */
  readonly projectId?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.
   *
   * @schema CfnPrivateEndpointProps#EndpointServiceId
   */
  readonly endpointServiceId?: string;

  /**
   * Unique 24-hexadecimal digit string that identifies the private endpoint service for which you want to create a private endpoint.
   *
   * @schema CfnPrivateEndpointProps#InterfaceEndpointId
   */
  readonly interfaceEndpointId?: string;

  /**
   * Cloud service provider that manages this private endpoint.
   *
   * @schema CfnPrivateEndpointProps#CloudProvider
   */
  readonly cloudProvider?: string;

  /**
   * If this proper is set to TRUE, the cloud formation resource will return success Only if the private connection is Succeeded
   *
   * @schema CfnPrivateEndpointProps#EnforceConnectionSuccess
   */
  readonly enforceConnectionSuccess?: boolean;

  /**
   * State of the Amazon Web Service PrivateLink connection when MongoDB Cloud received this request.
   *
   * @schema CfnPrivateEndpointProps#ConnectionStatus
   */
  readonly connectionStatus?: string;

  /**
   * Error message returned when requesting private connection resource. The resource returns null if the request succeeded.
   *
   * @schema CfnPrivateEndpointProps#ErrorMessage
   */
  readonly errorMessage?: string;
}

/**
 * Converts an object of type 'CfnPrivateEndpointProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_CfnPrivateEndpointProps(
  obj: CfnPrivateEndpointProps | undefined
): Record<string, any> | undefined {
  if (obj === undefined) {
    return undefined;
  }
  const result = {
    Profile: obj.profile,
    ProjectId: obj.projectId,
    EndpointServiceId: obj.endpointServiceId,
    InterfaceEndpointId: obj.interfaceEndpointId,
    CloudProvider: obj.cloudProvider,
    EnforceConnectionSuccess: obj.enforceConnectionSuccess,
    ConnectionStatus: obj.connectionStatus,
    ErrorMessage: obj.errorMessage,
  };
  // filter undefined values
  return Object.entries(result).reduce(
    (r, i) => (i[1] === undefined ? r : { ...r, [i[0]]: i[1] }),
    {}
  );
}
/* eslint-enable max-len, quote-props */

/**
 * A CloudFormation `MongoDB::Atlas::PrivateEndpoint`
 *
 * @cloudformationResource MongoDB::Atlas::PrivateEndpoint
 * @stability external
 */
export class CfnPrivateEndpoint extends cdk.CfnResource {
  /**
   * The CloudFormation resource type name for this resource class.
   */
  public static readonly CFN_RESOURCE_TYPE_NAME =
    "MongoDB::Atlas::PrivateEndpoint";

  /**
   * Resource props.
   */
  public readonly props: CfnPrivateEndpointProps;

  /**
   * Attribute `MongoDB::Atlas::PrivateEndpoint.Id`
   */
  public readonly attrId: string;

  /**
   * Create a new `MongoDB::Atlas::PrivateEndpoint`.
   *
   * @param scope - scope in which this resource is defined
   * @param id    - scoped id of the resource
   * @param props - resource properties
   */
  constructor(
    scope: constructs.Construct,
    id: string,
    props: CfnPrivateEndpointProps
  ) {
    super(scope, id, {
      type: CfnPrivateEndpoint.CFN_RESOURCE_TYPE_NAME,
      properties: toJson_CfnPrivateEndpointProps(props)!,
    });

    this.props = props;

    this.attrId = cdk.Token.asString(this.getAtt("Id"));
  }
}
